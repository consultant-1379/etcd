pipeline {
    agent {
        node {
            label SLAVE
        }
    }
    environment {
        GERRIT = credentials('eadphub-psw')
    }
    stages{
        stage('Update CBOS version') {
            steps{
                    checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'eadphub-psw', url: 'ssh://gerrit-gamma.gic.ericsson.se:29418/AIA/microservices/etcd']]])
                    sh """find . -name "common-properties.yaml" | xargs sed -i 's/\\(CBO_VERSION:[[:space:]]\\).*/\\1"${params.CBO_VERSION}"/g'"""
                    sh """find . -name "2pp_dependencies.yaml" | xargs sed -i '/Common Base OS/{n;s/\\(version:[[:space:]]\\).*/\\1${params.SECONDPP_VERSION}/g;}'"""
                    sh """find . -name "product_structure.yaml" | xargs sed -i '/CXC 201/{n;s/\\(version:[[:space:]]\\).*/\\1${params.SECONDPP_VERSION}/g;}'"""
                    sh """find . -name "product_structure.yaml" | xargs sed -i '/CXU 101 1463/{n;s/\\(version:[[:space:]]\\).*/\\1${params.SECONDPP_VERSION}/g;}'"""
                    script{
                        if(params.SP_VERSION == "")
                        {
                        }
                        else {
                            sh """find . -name "file_tests.yaml" | xargs sed -i 's/\\(VERSION_ID="\\).*"/\\1${params.SP_VERSION}"/g'"""
                        }
                    }
                    sh 'git status'
                    sh 'git stage -A'
                    sh """git commit -m '${params.JIRA} - DCED: Update CBO version to ${params.CBO_VERSION}' -m 'JIRA Link: https://eteamproject.internal.ericsson.com/browse/${params.JIRA}'"""
                    sh 'gitdir=$(git rev-parse --git-dir); scp -p -P 29418 lciadm100@gerrit-gamma.gic.ericsson.se:hooks/commit-msg ${gitdir}/hooks/'
                    sh 'git commit --amend --no-edit'
                    sh 'git push origin HEAD:refs/for/master'

            }
        }
        stage('Cleanup Workspace') {
            steps {
                script {
                    sh "rm -rf defensicstar.tgz"
                }
            }
        }
    }
}